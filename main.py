#!/usr/bin/env python3
# SÃ¼rÃ¼m: 1.1
from datetime import datetime
import instaloader
from core.init import *

L = instaloader.Instaloader()

def Ã¶ncekiOturumuYÃ¼kle(kullanÄ±cÄ±_adÄ±):
    """
    Mevcut oturum dosyasÄ±nÄ± yÃ¼kler ve kullanÄ±cÄ± adÄ± ile giriÅŸ yapar.
    """
    try:
        L.load_session_from_file(kullanÄ±cÄ±_adÄ±)
        YazdÄ±r('s', 'Oturum yÃ¼klendi: %s' % L.test_login())
        input('Devam etmek iÃ§in Enter tuÅŸuna basÄ±n: ')
    except Exception as e:
        YazdÄ±r('d', 'Oturum yÃ¼kleme baÅŸarÄ±sÄ±z! GiriÅŸ yapmadan devam etmek iÃ§in Enter tuÅŸuna basÄ±n.')
        YazdÄ±r('w', f'Hata: {e}')
        input('\n:$ ')

def yeniGiriÅŸ():
    """
    KullanÄ±cÄ±dan Instagram kimlik bilgilerini alarak yeni bir oturum baÅŸlatÄ±r.
    """
    afiÅŸ()
    YazdÄ±r('w', '\n1: Instagram\'a GiriÅŸ Yap')
    YazdÄ±r('w', '2: GiriÅŸ yapmadan - sÄ±nÄ±rlÄ± Ã¶zellikler')
    seÃ§enek = input('\n:$ ')
    if seÃ§enek == '1':
        afiÅŸ()
        YazdÄ±r('i', '\nGiriÅŸ yapmak iÃ§in aÅŸaÄŸÄ±ya kimlik bilgilerinizi girin')
        kullanÄ±cÄ±_adÄ± = input('\nKullanÄ±cÄ± AdÄ±: ')
        try:
            L.interactive_login(kullanÄ±cÄ±_adÄ±)
            L.save_session_to_file()
            YazdÄ±r('s', '\nBaÅŸarÄ±yla giriÅŸ yapÄ±ldÄ±')
            input('Devam etmek iÃ§in Enter tuÅŸuna basÄ±n: ')
        except instaloader.exceptions.BadCredentialsException:
            afiÅŸ()
            YazdÄ±r('d', 'GeÃ§ersiz kimlik bilgileri')
            YazdÄ±r('w', 'Tekrar deneyin')

def ana_fonksiyon():
    """
    KullanÄ±cÄ± tarama dÃ¶ngÃ¼sÃ¼nÃ¼ baÅŸlatÄ±r ve kullanÄ±cÄ±dan hedef kullanÄ±cÄ± adÄ±nÄ± ister.
    """
    afiÅŸ()
    YazdÄ±r('i', 'KullanÄ±cÄ±lar taranÄ±yor...')
    while True:
        hedef_kullanÄ±cÄ± = input('\nHedef kullanÄ±cÄ± adÄ±: ')
        if hedef_kullanÄ±cÄ± == '':
            YazdÄ±r('w', 'KullanÄ±cÄ± adÄ± boÅŸ olamaz')
            continue
        if hedef_kullanÄ±cÄ± == '.b':  # ! EÄŸer yanlÄ±ÅŸlÄ±kla kullanÄ±cÄ± tarama seÃ§ildi ise, dÃ¶ngÃ¼den Ã§Ä±kmak iÃ§in `.b` yazÄ±n.
            return
        afiÅŸ()
        YazdÄ±r('i', f'\n{hedef_kullanÄ±cÄ±} Ã¼zerinde tarama baÅŸlatÄ±lÄ±yor')
        print('`````````````````````````````````````````````````\n')
        baÅŸlangÄ±Ã§_zamanÄ± = datetime.now()
        try:
            profil = instaloader.Profile.from_username(L.context, hedef_kullanÄ±cÄ±)
            break
        except instaloader.exceptions.ConnectionException as e:
            afiÅŸ()
            YazdÄ±r('d', f'\n{e}')
            YazdÄ±r('w', 'LÃ¼tfen tekrar deneyin')
        except instaloader.exceptions.ProfileNotExistsException as e:
            afiÅŸ()
            YazdÄ±r('d', f'\nKullanÄ±cÄ± "{hedef_kullanÄ±cÄ±}" mevcut deÄŸil: {e}')
            YazdÄ±r('w', 'YazÄ±m hatalarÄ±nÄ± kontrol edin ve tekrar deneyin')
        except instaloader.exceptions.LoginRequiredException as r:
            afiÅŸ()
            YazdÄ±r('w', f'\n{r}')
            YazdÄ±r('d', 'Tekrar deneyin veya Ã¶nce giriÅŸ yapÄ±n')
            exit()
        except instaloader.exceptions.QueryReturnedBadRequestException as b:
            afiÅŸ()
            YazdÄ±r('d', f'\n{b}')
            
    YazdÄ±r('i', f'Tarama {geÃ§enZaman(baÅŸlangÄ±Ã§_zamanÄ±)} saniyede tamamlandÄ±\n')
    bilgi(profil)
    indir(profil)

if __name__ == '__main__':
    Ã¶ncekiOturumlar = oturumlarÄ±GÃ¶ster()
    if Ã¶ncekiOturumlar:
        afiÅŸ()
        YazdÄ±r('s', f'\n{len(Ã¶ncekiOturumlar)} oturumunuz var.')
        print('`````````````````````````````````````````````````\n')
        for id, oturum in enumerate(Ã¶ncekiOturumlar, 1):
            print(f'      {id}. {oturum}')
        YazdÄ±r('s', '\nOturumu yÃ¼klemek iÃ§in kimliÄŸi girin.')
        YazdÄ±r('s', 'Ya da yeni bir kullanÄ±cÄ± adÄ± ile giriÅŸ yapmak iÃ§in 0\'Ä± girin.')
        seÃ§enek = int(input('\n:$ '))
        if seÃ§enek == 0:
            afiÅŸ()
            YazdÄ±r('i', '\nGiriÅŸ yapmak iÃ§in aÅŸaÄŸÄ±ya kimlik bilgilerinizi girin.')
            kullanÄ±cÄ±_adÄ± = input('\nKullanÄ±cÄ± AdÄ±: ')
            try:
                L.interactive_login(kullanÄ±cÄ±_adÄ±)
                L.save_session_to_file()
                YazdÄ±r('s', '\nBaÅŸarÄ±yla giriÅŸ yapÄ±ldÄ±')
            except Exception as e:  # Hata mesajÄ±nÄ± gÃ¶stermek iÃ§in tÃ¼m hatalarÄ± yakala
                afiÅŸ()
                YazdÄ±r('d', e)
                YazdÄ±r('d', 'GeÃ§ersiz kimlik bilgileri')
                YazdÄ±r('w', 'Tekrar deneyin')
                input('\n:$ ')

        elif seÃ§enek > 0:
            oturum_id = seÃ§enek - 1
            oturum_dosyasÄ± = Ã¶ncekiOturumlar[oturum_id]
            kullanÄ±cÄ±_adÄ± = oturum_dosyasÄ±.replace('session-', '')
            Ã¶ncekiOturumuYÃ¼kle(kullanÄ±cÄ±_adÄ±)
        else:
            pass

    else:
        yeniGiriÅŸ()
    while True:
        afiÅŸ()
        print('\033[1;33ma: KullanÄ±cÄ±larÄ± Tara         b: Taranan KullanÄ±cÄ±larÄ± GÃ¶r        c: Ã‡Ä±kÄ±ÅŸ\033[0m\n\n')
        seÃ§enek = input(':$ ')
        
        if seÃ§enek.strip().lower()[0] == 'c':
            exit('\nHoÅŸÃ§a kal ğŸ‘‹')
        
        elif seÃ§enek.strip().lower()[0] == 'b':
            tarananlar()
        
        else:
            ana_fonksiyon()
